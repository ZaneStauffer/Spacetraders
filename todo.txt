=================
====== CLI ======
=================
CLI manages all user input and interface
commands:
- help: list commands and scripts
- run [script]: run a script
- list: list all scripts and their metadata
- exit: exit the program
- processes: list all running processes
- token [token]: set the token
- exec: allows for execution of arbitrary python code in the context of the CLI (for debugging)
- register: register a new agent and update the .env file with its token

TODO: token
COMPLETE: exec
COMPLETE: shorthand for run command (just script name)
TODO: register
TODO: processes
TODO: autocomplete for commands and scripts (tab completion)
FIXME: index out of range when pressing enter on empty input (should just do nothing)
TODO: Shorthand script execution in exec mode (just script name)

=================
==== LOGGER =====
=================
TODO: Log timestamps from response to log. Automatically log whenever a request is made (juicy data)
TODO: Saving to logfile

===== DATA =====
(name pending) this submodule logs data in JSON format for creation of a common training datasets.
should log every request and response, and allow for easy filtering of data.
should also log metadata about the script that was run, and the context in which it was run.
should log all game actions that the agent takes, and the results of those actions.

=================
==== CONFIG =====
=================
Using simple .env file for now
os.getenv() to fetch env var

=================
===== ERROR =====
=================

=================
===== TESTS =====
=================
TODO: Implement pytest

=================
=== SCRIPTING ===
=================
FINISHED: Pass arguments to script from CLI
FINISHED: Allow scripts to return values
FINISHED: Script metadata (name, description, etc) <- Use docstrings for this
FINISHED: Run scripts from other scripts & log their context
TODO: executor.execute() filepath argument should append directory base "../scripts/" for cleaner calling in scripts
TODO: Spawn process for scripts (concurrency)
TODO: Nested script folders
FIXME: Executor should catch ALL exceptions and log them

=================
=== DATABASE ====
=================
TODO: Implement database
TODO: Implement caching middleware (low priority)

=================
====== GAME =====
=================
For scripts that run game actions
TODO: display_system.py: Display current system in a nice way (show all waypoints, etc)
COMPLETE: display_ship.py: Display current ship in a nice way (fuel, cargo, etc)
TODO: Route planning script (heuristic, A*?)
TODO: Mining script (mine asteroids, sell ore)
TODO: Ship buying script (buy ships)
TODO: Refuelling script (buy fuel)
COMPLETE: get_waypoints.py: Get all waypoints in the current system
